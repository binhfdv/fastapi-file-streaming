services:
  compression:
    build:
      context: /workspaces/${WORKSPACE}/compression
    volumes:
      - "${COMPRESSION_MOUNT}/input/:/app/data/input"
      - "${SERVER_MOUNT}/${PROJECT}/bar/:/app/data/compressed"
    env_file:
      - .env
    networks:
      - my_network
    entrypoint: ["/app/compress.sh"]
    
  server:
    build:
      context: /workspaces/${WORKSPACE}/server
    volumes:
      - "${SERVER_MOUNT}/${PROJECT}/bar/:/app/media/${PROJECT}/bar"
      - "${SERVER_MOUNT}/${PROJECT}/archive/:/app/media/${PROJECT}/archive"
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:8080"
    networks:
      - my_network
    command: ["python", "pydash.py", "--host", "${SERVER_HOST}", "--port", "${SERVER_PORT}", "--datadir", "./media"]

  broker:
    build:
      context: /workspaces/${WORKSPACE}/broker
    volumes:
      - "${BROKER_MOUNT}/${PROJECT}/download/:/app/downloads"
    env_file:
      - .env
    depends_on:
      - server
    networks:
      - my_network
    command: ["python", "scheduled_request.py", "--interval", "${INTERVAL}", "--api", "${API_URL}", "--project", "${PROJECT}", "--ext", "${EXT}"]

  depression:
    build:
      context: /workspaces/fastapi-file-streaming/depression
    volumes:
      - "${BROKER_MOUNT}/${PROJECT}/download/:/app/data/compressed"
      - "${DEPRESSION_MOUNT}/output/:/app/data/depressed"
    env_file:
      - .env
    networks:
      - my_network
    entrypoint: ["/app/depress.sh"]

networks:
  my_network:
    driver: bridge

volumes:
  server_mount:
  broker_mount:
